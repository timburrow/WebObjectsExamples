/*
 WXHyperlink.java
 [WOComponentExamples Project]

© Copyright 2001-2007 Apple Inc. All rights reserved.

IMPORTANT:  This Apple software is supplied to you by Apple Computer, Inc. (“Apple”) in consideration of your agreement to the following terms, and your use, installation, modification or redistribution of this Apple software constitutes acceptance of these terms.  If you do not agree with these terms, please do not use, install, modify or redistribute this Apple software.

In consideration of your agreement to abide by the following terms, and subject to these terms, Apple grants you a personal, non-exclusive license, under Apple’s copyrights in this original Apple software (the “Apple Software”), to use, reproduce, modify and redistribute the Apple Software, with or without modifications, in source and/or binary forms; provided that if you redistribute the Apple Software in its entirety and without modifications, you must retain this notice and the following text and disclaimers in all such redistributions of the Apple Software.  Neither the name, trademarks, service marks or logos of Apple Computer, Inc. may be used to endorse or promote products derived from the Apple Software without specific prior written permission from Apple.  Except as expressly stated in this notice, no other rights or licenses, express or implied, are granted by Apple herein, including but not limited to any patent rights that may be infringed by your derivative works or by other works in which the Apple Software may be incorporated.

The Apple Software is provided by Apple on an "AS IS" basis.  APPLE MAKES NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, REGARDING THE APPLE SOFTWARE OR ITS USE AND OPERATION ALONE OR IN COMBINATION WITH YOUR PRODUCTS.

IN NO EVENT SHALL APPLE BE LIABLE FOR ANY SPECIAL, INDIRECT, INCIDENTAL OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) ARISING IN ANY WAY OUT OF THE USE, REPRODUCTION, MODIFICATION AND/OR DISTRIBUTION OF THE APPLE SOFTWARE, HOWEVER CAUSED AND WHETHER UNDER THEORY OF CONTRACT, TORT (INCLUDING NEGLIGENCE), STRICT LIABILITY OR OTHERWISE, EVEN IF APPLE HAS BEEN  ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
 */


/**
 This class and the associated component demonstrates the creation of an
 anchor tag which, when clicked, either performs an action or jumps to a
 particular page.  The actual item for the link is created using the
 WOComponentContent from the parent.

 This component demonstrates the use of two useful methods - the context's
 componentActionURL and WOComponent's invokeAction.  Note that the href
 for the link is generated by the componentActionURL method, which basically
 returns the action pointer to this component at the correct moment in state,
 at which time it performs the invokeAction method.

 Note here that the method performed via the componentActionURL is set via the
 "invokeAction" binding in the generic element tag for the hyperlink, and in this
 case the method is NOT an override of the invokeAction method on WOComponent
 (this one takes no arguments).  Had no value been specified for the invokeAction
 binding, the invokeAction method on WOComponent would be performed.  So our choices
 are two write our own method and specify it in the 'invokeAction' binding, or not
 specify the binding at all and override the default method.

 This component requires ONE of the following bindings:

 - (WOActionResults) action	the action to perform from the link
 - (String) pageName		the page to jump to from the link

 */
package webobjectsexamples.wocomponentelements;

import com.webobjects.appserver.WOComponent;
import com.webobjects.appserver.WOContext;

 public class WXHyperlink extends WOComponent {

    /**
	 * serialVersionUID
	 */
	private static final long serialVersionUID = -3937957260977623453L;


	/**
     * Constructor
     */

    public WXHyperlink( WOContext aContext )  {
        super( aContext );
    }


    /**
     * Override of method for synchronization of local instance variables with
     * bindings (pushing and pulling values from the bindings).  Here we turn
     * OFF synchronization.
     */

    public boolean synchronizesVariablesWithBindings() {
        return false;
    }


    /**
     * Method performed via the invokeAction binding in the hyperlink element.
     * Note that this is NOT an override of the WOComponent method with the same name
     * (but different number of arguments).  This method returns either the pageName
     * specified or performs the action specified in the bindings;  if neither binding
     * exists, NULL is returned.
     */

    public WOComponent invokeAction()  {

        WOComponent anActionResult = null;
        if ( hasBinding( "action") ) {
            anActionResult = (WOComponent)valueForBinding( "action" );
        } else if ( hasBinding( "pageName" ) ) {
           String aPageName = (String)valueForBinding( "pageName" );
            anActionResult = pageWithName( aPageName );
        }
        return anActionResult;
    }

}