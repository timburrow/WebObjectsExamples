AdaptorField: WOTextField {
	size = "25";
	value = mySession.mApplication.adaptor;
}

AdaptorSettingsForm: WOForm {
}

AdaptorSpecificConditional: WOCollapsibleComponentContent {
	closedLabel = "<FONT SIZE=+1><B>Load Balancing and Adaptor Settings</B></FONT>";
	condition = isAdaptorSettingsSectionVisible;
	openedLabel = "<FONT SIZE=+1><B>Load Balancing and Adaptor Settings</B></FONT>";
}


AdaptorThreadsMinField: WOTextField {
	size = "5";
	value = appDefaults.adaptorThreadsMin;
        numberformat = "0";
}

AdaptorThreadsMaxField: WOTextField {
	size = "5";
	value = appDefaults.adaptorThreadsMax;
        numberformat = "0";
}


AdaptorThreadsField: WOTextField {
	size = "5";
	value = appDefaults.adaptorThreads;
        numberformat = "0";
}

InstDefaultsForm: WOForm {
	multipleSubmit = true;
}

AppSettingsForm: WOForm {
	multipleSubmit = true;
}

AppName: WOString {
	value = appDefaults.name;
}

ArgsField: WOText {
	cols = "50";
	rows = "3";
	value = appDefaults.additionalArgs;
	wrap = "virtual";
}

AutoRecoverCheckbox: WOCheckBox {
	checked = appDefaults.autoRecover;
}

CachingEnabledCheckbox: WOCheckBox {
	checked = appDefaults.cachingEnabled;
}

CheckBox1: WOCheckBox {
	checked = appDefaults.phasedStartup;
}

CheckBox2: WOCheckBox {
	checked = currentScheduledInstance.schedulingEnabled;
}

CheckBox3: WOCheckBox {
	checked = mySession.mApplication.notificationEmailEnabled;
}

CheckBox6: WOCheckBox {
	checked = appDefaults.autoOpenInBrowser;
}

CheckBox7: WOCheckBox {
	checked = currentScheduledInstance.gracefulScheduling;
}

Conditional1: WOConditional {
	negate = true;
	condition = shouldSchedule;
}

Conditional2: WOConditional {
	condition = shouldSchedule;
}

ConfigurePageLink: WOHyperlink {
	action = configurePageClicked;
}

ConnectTimeoutField: WOTextField {
	numberformat = "0";
	size = "4";
	value = mySession.mApplication.cnctTimeout;
}

ConnectTimeoutField2: WOTextField {
	numberformat = "0";
	size = 4;
	value = mySession.mApplication.sendBufSize;
}

ConnectTimeoutField3: WOTextField {
	numberformat = "0";
	size = 4;
	value = mySession.mApplication.recvBufSize;
}

DebuggingLogsCheckbox: WOCheckBox {
	checked = appDefaults.debuggingEnabled;
}

DetailViewButton: WOImage {
	alt = "Detail View";
	border = "0";
	filename = "ButtonDetailView.gif";
	height = "28";
	width = "66";
}

EmailAddressesField: WOTextField {
	size = "60";
	value = mySession.mApplication.notificationEmailAddr;
}

EmailConditional: WOCollapsibleComponentContent {
	closedLabel = "<FONT SIZE=+1><B>Email Notifications</B></FONT>";
	condition = isEmailSectionVisible;
	openedLabel = "<FONT SIZE=+1><B>Email Notifications</B></FONT>";
}

EmailForm: WOForm {
}

ErrorMsg: WOString {
	value = session.message;
	escapeHTML = false;
}

ListenQueueSizeField: WOTextField {
	size = "5";
	value = appDefaults.listenQueueSize;
        numberformat = "0";
}

LoadBalancingScheme: WOPopUpButton {
	item = loadSchedulerItem;
	list = loadSchedulerList;
	selection = loadSchedulerSelection;
}

MinimumActiveSessionField: WOTextField {
	size = "5";
	value = appDefaults.minimumActiveSessionsCount;
        numberformat = "0";
}

NOSmtpHostConfigured: WOConditional {
	condition = isMailingConfigured;
	negate = true;
}

ApplicationConfigConditional: WOCollapsibleComponentContent {
	closedLabel = "<FONT SIZE=+1><B>Application Settings</B></FONT>";
	condition = isAppConfigureSectionVisible;
	openedLabel = "<FONT SIZE=+1><B>Application Settings</B></FONT>";
}

NewInstanceConditional: WOCollapsibleComponentContent {
	closedLabel = "<FONT SIZE=+1><B>New Instance Defaults</B></FONT>";
	condition = isNewInstanceSectionVisible;
	openedLabel = "<FONT SIZE=+1><B>New Instance Defaults</B></FONT>";
}

Option3Form: WOForm {
	multipleSubmit = true;
}

NavPage: NavigationPage {
	currentPage = APP_PAGE;
}

PathField: WOTextField {
	size = "50";
	value = appDefaults.unixPath;
}

PathPickerWizard: WOHyperlink {
	action = pathPickerWizardClickedUnix;
}

PathPickerWizard2: WOHyperlink {
	action = pathPickerWizardClickedUnixOutput;
}

PathPickerWizard3: WOHyperlink {
	action = pathPickerWizardClickedWindowsOutput;
}

PathPickerWizard4: WOHyperlink {
	action = pathPickerWizardClickedWindows;
}

PathPickerWizard5: WOHyperlink {
	action = pathPickerWizardClickedMac;
}

PathPickerWizard6: WOHyperlink {
	action = pathPickerWizardClickedMacOutput;
}

PathWizardImage: WOImage {
	align = "CENTER";
	border = "0";
	filename = "PathWizard.gif";
	height = "24";
	width = "46";
}

PoolsizeField: WOTextField {
	numberformat = "0";
	size = "4";
	value = mySession.mApplication.poolsize;
}

PopUpButton1: WOPopUpButton {
	item = urlVersionItem;
	list = urlVersionList;
	selection = urlVersionSelection;
}

PopUpButton6: WOPopUpButton {
	list = schedulingIntervalList;
	selection = currentScheduledInstance.schedulingInterval;
}

PopUpButton8: WOPopUpButton {
	list = weekList;
	selection = weekSelection;
}

PopUpButtonD: WOPopUpButton {
	list = timeOfDayList;
	selection = timeDailySelection;
}

PopUpButtonH: WOPopUpButton {
	list = timeOfDayList;
	selection = timeHourlySelection;
}

PopUpButtonW: WOPopUpButton {
	list = timeOfDayList;
	selection = timeWeeklySelection;
}

ProjectSearchPathField: WOTextField {
	size = "40";
	value = appDefaults.projectSearchPath;
}

PushSubmitButton: WOSubmitButton {
	action = defaultsPushClicked;
	value = "Push All";
}

RadioButton1: WORadioButton {
    name = currentScheduledInstance.id;
    value = "HOURLY";
    selection = currentScheduledInstance.schedulingType;
}

RadioButton2: WORadioButton {
    name = currentScheduledInstance.id;
    value = "DAILY";
    selection = currentScheduledInstance.schedulingType;
}

RadioButton3: WORadioButton {
    name = currentScheduledInstance.id;
    value = "WEEKLY";
    selection = currentScheduledInstance.schedulingType;
}

RealNameField: WOTextField {
	size = "20";
	value = appDefaults.name;
}

ReceiveTimeoutField: WOTextField {
	numberformat = "0";
	size = "4";
	value = mySession.mApplication.recvTimeout;
}

RedirectionURLField: WOTextField {
	size = "60";
	value = mySession.mApplication.redir;
}

Repetition1: WORepetition {
	item = currentScheduledInstance;
	list = mySession.mApplication.instanceArray;
}

RetriesField : WOTextField {
    value = mySession.mApplication.retries;
    size = "4";
    numberformat = "0";
}

ReturnLink: WOHyperlink {
	action = detailPageClicked;
}

SaveChangesSubmitButton: WOSubmitButton {
	action = defaultsUpdateClicked;
	value = "Update for New Instances Only";
}

SchedulingConditional: WOCollapsibleComponentContent {
	closedLabel = "<FONT SIZE=+1><B>Scheduling</B></FONT>";
	condition = isSchedulingSectionVisible;
	openedLabel = "<FONT SIZE=+1><B>Scheduling</B></FONT>";
}

SendTimeoutField: WOTextField {
	numberformat = "0";
	size = "4";
	value = mySession.mApplication.sendTimeout;
}

SessionTimeOutField: WOTextField {
	size = "20";
	value = appDefaults.sessionTimeOut;
        numberformat = "0";
}

SmtpHostConfigured: WOConditional {
	condition = isMailingConfigured;
}

StatisticsPasswordField: WOTextField {
	size = "20";
	value = appDefaults.statisticsPassword;
}

String1: WOString {
	value = currentScheduledInstance.id;
}

String2: WOString {
	value = currentScheduledInstance.displayHostAndPort;
}

SubmitButton1: WOSubmitButton {
	action = emailUpdateClicked;
	value = "Update Settings";
}

SubmitButton2: WOSubmitButton {
	action = schedulingUpdateClicked;
	value = "Update Scheduling";
}

TextField10: WOTextField {
	size = 50;
	value = appDefaults.macOutputPath;
}

TextField11: WOTextField {
	size = 50;
	value = appDefaults.winPath;
}

TextField12: WOTextField {
	size = 50;
	value = appDefaults.macPath;
}

TextField3: WOTextField {
	size = 50;
	value = appDefaults.unixOutputPath;
}

TextField4: WOTextField {
	value = appDefaults.startingPort;
	numberformat = "0";
}

TextField5: WOTextField {
	value = appDefaults.timeForStartup;
	numberformat = "0";
}

TextField6: WOTextField {
	size = 50;
	value = appDefaults.winOutputPath;
}

TextField7: WOTextField {
	value = appDefaults.lifebeatInterval;
	numberformat = "0";
}

TextField8: WOTextField {
	value = customSchedulerName;
}

TimeoutField: WOTextField {
	numberformat = "0";
	size = "4";
	value = mySession.mApplication.dormant;
}

UpdateAdaptorButton: WOSubmitButton {
	action = adaptorUpdateClicked;
	value = "Change Adaptor Settings";
}


// Begin "Only" Buttons
AppDefaultsOnlyButton: WOSubmitButton {
	action = updateAppDefaultsOnly;
	value = "Update Application Settings";
}

PathOnlyButton: WOSubmitButton {
	action = updatePathOnly;
	value = "Push";
}

AutoRecoverOnlyButton: WOSubmitButton {
	action = updateAutoRecoverOnly;
	value = "Push";
}

MinimumOnlyButton: WOSubmitButton {
	action = updateMinimumOnly;
	value = "Push";
}

CachingOnlyButton: WOSubmitButton {
	action = updateCachingOnly;
	value = "Push";
}

DebuggingOnlyButton: WOSubmitButton {
	action = updateDebuggingOnly;
	value = "Push";
}

OutputOnlyButton: WOSubmitButton {
	action = updateOutputOnly;
	value = "Push";
}

AutoOpenOnlyButton: WOSubmitButton {
	action = updateAutoOpenOnly;
	value = "Push";
}

LifebeatOnlyButton: WOSubmitButton {
	action = updateLifebeatOnly;
	value = "Push";
}

AddArgsOnlyButton: WOSubmitButton {
	action = updateAddArgsOnly;
	value = "Push";
}





