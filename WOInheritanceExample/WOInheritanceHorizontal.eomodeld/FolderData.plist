{
    attributes = (
        {
            columnName = data_id; 
            externalType = integer; 
            name = dataId; 
            precision = 10; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            columnName = folder_id; 
            externalType = integer; 
            internalInfo = {_nameInObjectStore = tree_node_id; }; 
            name = folderId; 
            precision = 10; 
            valueClassName = NSNumber; 
            valueType = i; 
        }
    ); 
    attributesUsedForLocking = (dataId, folderId); 
    className = EOGenericRecord; 
    externalName = Folder_Data; 
    fetchSpecificationDictionary = {}; 
    internalInfo = {_clientClassPropertyNames = (); _nameInObjectStore = Tree_Node_Data; }; 
    name = FolderData; 
    primaryKeyAttributes = (folderId, dataId); 
    relationships = (
        {
            destination = Creature; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = creatureId; sourceAttribute = dataId; }); 
            name = creature; 
        }, 
        {
            destination = Folder; 
            internalInfo = {_nameInObjectStore = treeNode; }; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = folderId; sourceAttribute = folderId; }); 
            name = folder; 
        }
    ); 
}
